SELECT
    *,
    CASE
        WHEN Final > CURRENT_DATE() THEN 0
        WHEN Final BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY) AND CURRENT_DATE() THEN 4
        WHEN Final BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 90 DAY) AND DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY) THEN 3
        WHEN Final BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 180 DAY) AND DATE_SUB(CURRENT_DATE(), INTERVAL 90 DAY) THEN 2
        WHEN Final < DATE_SUB(CURRENT_DATE(), INTERVAL 180 DAY) THEN 1
    END AS recencia

FROM (
    SELECT
        cv.cpf,
        aggregated_data.valorTotalPago,
        aggregated_data.numberOfOrders,
        cv.dataCompra,
        cv.nomeCpf,
        cv.telefone,
        cv.tipoDeCompra,
        cv.email,
        cv.formaPagamento,
        QNT1,
        cupom,
        brindeDesconto,
        aggregated_data.valorTotalPago / aggregated_data.numberOfOrders AS media_custo_pedido,  -- Adiciona a média de custo dos pedidos
        CASE
            WHEN aggregated_data.numberOfOrders = 1 THEN 1
            WHEN aggregated_data.numberOfOrders = 2 THEN 2
            WHEN aggregated_data.numberOfOrders BETWEEN 3 AND 4 THEN 3
            ELSE 4
        END AS frequency_score,  -- Adiciona a nota de frequência
        DATE_ADD(cv.dataCompra, INTERVAL QNT1 MONTH) AS Final  -- Calcula a data de fim de uso com base na quantidade de meses de uso
    FROM (
        SELECT
            cpf,
            MAX(dataCompra) as LatestCompra
        FROM `setyou-prd.controle_de_vendas.controle_de_vendas`
        GROUP BY cpf
    ) AS latest_compras
    INNER JOIN `setyou-prd.controle_de_vendas.controle_de_vendas` cv ON latest_compras.cpf = cv.cpf AND latest_compras.LatestCompra = cv.dataCompra
    INNER JOIN (
        SELECT
            cpf,
            SUM(valorPago) AS valorTotalPago,
            COUNT(cpf) AS numberOfOrders
        FROM `setyou-prd.controle_de_vendas.controle_de_vendas`
        GROUP BY cpf
    ) AS aggregated_data ON cv.cpf = aggregated_data.cpf
) AS final_data
ORDER BY dataCompra;
